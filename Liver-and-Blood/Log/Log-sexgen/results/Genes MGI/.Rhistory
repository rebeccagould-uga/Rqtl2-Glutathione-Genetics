install.packages("qtl2", repos="https://rqtl.org/qtl2cran")
library(tidyverse)
library(readxl)
library(qtl2)
install.packages(c(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”))
install.packages((“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”))
install.packages(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”)
install.packages(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”)
install.packages(c(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”))
install.packages(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”)
install.packages("devtools")
library(yaml)
library(devtools)
library(jsonlite)
library(data.table)
library(RcppEigen)
library(Rcpp)
library(RSQLite)
install.packages("devtools")install.packages(c(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”))
install.packages(c(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”))
install.packages(“devtools”, “yaml”, “jsonlite”, “data.table”, “RcppEigen”, “RSQLite”, “qtl”)
library(devtools)
install_github("rqtl/qtl2")
load("~/.RData")
load("~/.RData")
load("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex/Liver QTL Mapping - Log - Sex.RData")
library(qtl2)
library (tidyverse)
library (readxl)
library(yaml)
library(devtools)
library(RSQLite)
library(jsonlite)
library (data.table)
library (RcppEigen)
library (RSQLite)
qtlscan_AST <- scan1(genoprobs = probs, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sex, cores=10)
perm_AST <- scan1perm(genoprobs = probs, pheno = pheno["logAST"], addcovar = sex, n_perm = 1000, cores=10)
qtlscan_ALT <- scan1(genoprobs = probs, pheno = pheno["logALT"], kinship = kinship_loco, addcovar = sex, cores=10)
perm_ALT <- scan1perm(genoprobs = probs, pheno = pheno["logALT"], addcovar = sex, n_perm = 1000, cores=10)
qtlscan_BUN <- scan1(genoprobs = probs, pheno = pheno["logBUN"], kinship = kinship_loco, addcovar = sex, cores=10)
perm_BUN <- scan1perm(genoprobs = probs, pheno = pheno["logBUN"], addcovar = sex, n_perm = 1000, cores=10)
save.image("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex/Liver QTL Mapping - Log - Sex.RData")
save.image("~/R01_GSH_DO_mapping_Liver/Log/Log - sex/Liver QTL Mapping - Log - Sex.RData")
qtlscan_AST <- scan1(genoprobs = probs, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sex, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_AST = summary(perm_AST, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for AST", ylim = c(0,11))
abline(h = threshold_AST, col = c("purple", "red", "blue"), lwd = 2)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.1), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.3), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.35), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.40), prob = 0.95, expand2markers = FALSE)
#using pmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = summary(perm_AST, alpha = 0.1), prob = 0.95, expand2markers = FALSE)
#using pmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = summary(perm_AST, alpha = 0.40), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.45), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.5), prob = 0.95, expand2markers = FALSE)
#For AST --- Chromosome 16
par(mar=c(4.1, 4.1, 2.6, 2.6))
#using gmap (cM)
chr = 16
coef_blup_AST_chr16 <- scan1blup(genoprobs =  probs[,chr], pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sex, cores = 10)
plot_coefCC(x = coef_blup_AST_chr16, map = R01_GSH_DO_QTLdata$gmap, scan1_output = qtlscan_AST, main = "AST BLUPs plotted with CC Founders", legend = "bottomleft", bgcolor="gray95")
xlim <- c(25,45)
plot_coefCC(x = coef_blup_AST_chr16, map = R01_GSH_DO_QTLdata$gmap, scan1_output = qtlscan_AST, main = "AST BLUPs plotted with CC Founders", legend = "bottomleft", bgcolor="gray95", xlim = xlim)
#using pmap (Mbp)
chr = 16
peaksAST <- find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = 6.5, prob = 0.95)
start = peaksAST[peaksAST$chr ==  chr,"ci_lo"]
end = peaksAST[peaksAST$chr == chr, "ci_hi"]
View(peaksAST)
variants_AST_chr16 <- query_variants(chr, start, end)
out_snps_AST_chr16 <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sex, query_func = query_variants,
chr = chr, start = start, end = end, keep_all_snps = TRUE)
plot_snpasso(out_snps_AST_chr2$lod, out_snps_AST_chr2$snpinfo, main = "AST SNPs")
AST_Genes_MGI_chr16 <- query_genes_mgi(chr = chr, start = start, end = end)
plot(out_snps_AST_chr16$lod, out_snps_AST_chr16$snpinfo, drop_hilit=1.5, genes = AST_Genes_MGI_chr2, main = "AST Genes MGI")
setwd("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex")
out_gwas_AST <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sex, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_AST$lod, out_gwas_AST$snpinfo, altcol="green4", gap=0, main = "AST GWAS", ylim = c(0,6))
#For AST
boxplot(pheno$AST, main = "AST Box Plot")
boxplot(pheno$AST~pheno$generation, main = "AST Box Plot - by generation")
boxplot(pheno$logAST, main = "Log AST Box Plot")
boxplot(pheno$logAST~pheno$generation, main = "Log AST Box Plot - by generation")
#For ALT
boxplot(pheno$ALT, main = "ALT Box Plot")
boxplot(pheno$ALT~pheno$generation, main = "ALT Box Plot - by generation")
boxplot(pheno$logALT, main = "Log ALT Box Plot")
boxplot(pheno$logALT~pheno$generation, main = "Log ALT Box Plot - by generation")
#For BUN
boxplot(pheno$BUN, main = "BUN Box Plot")
boxplot(pheno$BUN~pheno$generation, main = "BUN Box Plot - by generation")
boxplot(pheno$logBUN, main = "Log BUN Box Plot")
boxplot(pheno$logBUN~pheno$generation, main = "Log BUN Box Plot - by generation")
qtlscan_ALT <- scan1(genoprobs = probs, pheno = pheno["logALT"], kinship = kinship_loco, addcovar = sex, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_ALT = summary(perm_ALT, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_ALT, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for ALT", ylim = c(0,11))
abline(h = threshold_ALT, col = c("purple", "red", "blue"), lwd = 2)
#using pmap (Mbp)
chr = 16
peaksAST <- find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = 6.5, prob = 0.95)
start = peaksAST[peaksAST$chr ==  chr,"ci_lo"]
end = peaksAST[peaksAST$chr == chr, "ci_hi"]
variants_AST_chr16 <- query_variants(chr, start, end)
out_snps_AST_chr16 <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sex, query_func = query_variants,
chr = chr, start = start, end = end, keep_all_snps = TRUE)
plot_snpasso(out_snps_AST_chr2$lod, out_snps_AST_chr2$snpinfo, main = "AST SNPs")
plot_snpasso(out_snps_AST_chr2$lod, out_snps_AST_chr2$snpinfo, main = "AST SNPs")
out_snps_AST_chr16 <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sex, query_func = query_variants,
chr = chr, start = start, end = end, keep_all_snps = TRUE)
plot_snpasso(out_snps_AST_chr16$lod, out_snps_AST_chr16$snpinfo, main = "AST SNPs")
AST_Genes_MGI_chr16 <- query_genes_mgi(chr = chr, start = start, end = end)
plot(out_snps_AST_chr16$lod, out_snps_AST_chr16$snpinfo, drop_hilit=1.5, genes = AST_Genes_MGI_chr16, main = "AST Genes MGI")
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_ALT = summary(perm_ALT, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_ALT, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for ALT", ylim = c(0,11))
abline(h = threshold_ALT, col = c("purple", "red", "blue"), lwd = 2)
out_gwas_ALT <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logALT"], kinship = kinship_loco, addcovar = sex, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_ALT$lod, out_gwas_ALT$snpinfo, altcol="green4", gap=0, main = "ALT GWAS", ylim = c(0,6))
qtlscan_BUN <- scan1(genoprobs = probs, pheno = pheno["logBUN"], kinship = kinship_loco, addcovar = sex, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_BUN = summary(perm_BUN, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_BUN, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for BUN", ylim = c(0,11))
abline(h = threshold_BUN, col = c("purple", "red", "blue"), lwd = 2)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_BUN, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_BUN, alpha = 0.1), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_BUN, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_BUN, alpha = 0.5), prob = 0.95, expand2markers = FALSE)
out_gwas_BUN <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logBUN"], kinship = kinship_loco, addcovar = sex, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_BUN$lod, out_gwas_BUN$snpinfo, altcol="green4", gap=0, main = "BUN GWAS", ylim = c(0,6))
setwd("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex/results/Genes MGI")
write_xlsx(list("AST chr16" = AST_Genes_MGI_chr2),
"BloodValuesGenesMGI - log sex.xlsx")
library (writexl)
write_xlsx(list("AST chr16" = AST_Genes_MGI_chr2),
"BloodValuesGenesMGI - log sex.xlsx")
write_xlsx(list("AST chr16" = AST_Genes_MGI_chr16),
"BloodValuesGenesMGI - log sex.xlsx")
save.image("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex/results/Genes MGI/Liver QTL Mapping - Log - Sex.RData")
save.image("~/R01_GSH_DO_mapping_Liver/Log/Log - sex/Liver QTL Mapping - Log - Sex.RData")
save.image("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sex/Liver QTL Mapping - Log - Sex.RData")
setwd("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sexgen")
qtlscan_AST <- scan1(genoprobs = probs, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sexgen, cores=10)
perm_AST <- scan1perm(genoprobs = probs, pheno = pheno["logAST"], addcovar = sexgen, n_perm = 1000, cores=10)
load("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sexgen/Liver QTL Mapping - Log - SexGen.RData")
qtlscan_AST <- scan1(genoprobs = probs, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sexgen, cores=10)
perm_AST <- scan1perm(genoprobs = probs, pheno = pheno["logAST"], addcovar = sexgen, n_perm = 1000, cores=10)
qtlscan_ALT <- scan1(genoprobs = probs, pheno = pheno["logALT"], kinship = kinship_loco, addcovar = sexgen, cores=10)
perm_ALT <- scan1perm(genoprobs = probs, pheno = pheno["logALT"], addcovar = sexgen, n_perm = 1000, cores=10)
qtlscan_BUN <- scan1(genoprobs = probs, pheno = pheno["logBUN"], kinship = kinship_loco, addcovar = sexgen, cores=10)
perm_BUN <- scan1perm(genoprobs = probs, pheno = pheno["logBUN"], addcovar = sexgen, n_perm = 1000, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_AST = summary(perm_AST, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for AST", ylim = c(0,11))
abline(h = threshold_AST, col = c("purple", "red", "blue"), lwd = 2)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.1), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.2), prob = 0.95, expand2markers = FALSE)
#using gmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$gmap, threshold = summary(perm_AST, alpha = 0.25), prob = 0.95, expand2markers = FALSE)
#using pmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = summary(perm_AST, alpha = 0.1), prob = 0.95, expand2markers = FALSE)
#using pmap (cM)
find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = summary(perm_AST, alpha = 0.25), prob = 0.95, expand2markers = FALSE)
#For AST --- Chromosome 16
par(mar=c(4.1, 4.1, 2.6, 2.6))
#using gmap (cM)
chr = 16
coef_blup_AST_chr16 <- scan1blup(genoprobs =  probs[,chr], pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sexgen, cores = 10)
plot_coefCC(x = coef_blup_AST_chr16, map = R01_GSH_DO_QTLdata$gmap, scan1_output = qtlscan_AST, main = "AST BLUPs plotted with CC Founders", legend = "bottomleft", bgcolor="gray95")
xlim <- c(25,45)
plot_coefCC(x = coef_blup_AST_chr16, map = R01_GSH_DO_QTLdata$gmap, scan1_output = qtlscan_AST, main = "AST BLUPs plotted with CC Founders", legend = "bottomleft", bgcolor="gray95", xlim = xlim)
#using pmap (Mbp)
chr = 16
peaksAST <- find_peaks(scan1_output = qtlscan_AST, map = R01_GSH_DO_QTLdata$pmap, threshold = 6.5, prob = 0.95)
start = peaksAST[peaksAST$chr ==  chr,"ci_lo"]
end = peaksAST[peaksAST$chr == chr, "ci_hi"]
variants_AST_chr16 <- query_variants(chr, start, end)
out_snps_AST_chr16 <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco[[chr]], addcovar = sexgen, query_func = query_variants,
chr = chr, start = start, end = end, keep_all_snps = TRUE)
plot_snpasso(out_snps_AST_chr16$lod, out_snps_AST_chr16$snpinfo, main = "AST SNPs")
AST_Genes_MGI_chr16 <- query_genes_mgi(chr = chr, start = start, end = end)
plot(out_snps_AST_chr16$lod, out_snps_AST_chr16$snpinfo, drop_hilit=1.5, genes = AST_Genes_MGI_chr16, main = "AST Genes MGI")
out_gwas_AST <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logAST"], kinship = kinship_loco, addcovar = sexgen, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_AST$lod, out_gwas_AST$snpinfo, altcol="green4", gap=0, main = "AST GWAS", ylim = c(0,6))
setwd("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sexgen/results/Genes MGI")
#set working directory
write_xlsx(list("AST chr16" = AST_Genes_MGI_chr16),
"BloodValuesGenesMGI - log sex.xlsx")
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_ALT = summary(perm_ALT, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_ALT, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for ALT", ylim = c(0,11))
abline(h = threshold_ALT, col = c("purple", "red", "blue"), lwd = 2)
out_gwas_ALT <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logALT"], kinship = kinship_loco, addcovar = sexgen, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_ALT$lod, out_gwas_ALT$snpinfo, altcol="green4", gap=0, main = "ALT GWAS", ylim = c(0,6))
par(mar=c(4.1, 4.1, 2.6, 2.6))
threshold_BUN = summary(perm_BUN, alpha = c(0.2, 0.1, 0.05))
plot_scan1(x = qtlscan_BUN, map = R01_GSH_DO_QTLdata$gmap,  main = "Genome Scan for BUN", ylim = c(0,11))
abline(h = threshold_BUN, col = c("purple", "red", "blue"), lwd = 2)
out_gwas_BUN <- scan1snps(genoprobs = probs, map = R01_GSH_DO_QTLdata$pmap, pheno = pheno["logBUN"], kinship = kinship_loco, addcovar = sexgen, query_func=query_variants, cores=10)
par(mar=c(4.1, 4.1, 2.6, 2.6))
plot(out_gwas_BUN$lod, out_gwas_BUN$snpinfo, altcol="green4", gap=0, main = "BUN GWAS", ylim = c(0,6))
save.image("~/OneDrive - University of Georgia/Pazdro Lab/R01 Redox/Analysis and Results/QTL Mapping/Log/Log - sexgen/Liver QTL Mapping - Log - SexGen.RData")
save.image("~/R01_GSH_DO_mapping_Liver/Log/Log - sexgen/Liver QTL Mapping - Log - SexGen.RData")
